name: Build and Push to ECR

on:
  push:
    branches:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: Build Docker Image
        run: |
          docker build -t kandidatnr-2036 .

      - name: Tag and Push Image to Amazon ECR
        if: github.ref == 'refs/heads/master'


        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          rev=$(git rev-parse --short HEAD)
          docker tag kandidatnr-2036 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidatnr-2036:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidatnr-2036:$rev
          docker tag kandidatnr-2036 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidatnr-2036:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidatnr-2036:latest

  terraform:
    name: "Terraform"
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidatnr-2036:latest
      PREFIX: "kandidatnr-2036"
      EMAIL: ${{ secrets.EMAIL_NAME }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: ./infra
        run: terraform plan   -var="prefix=$PREFIX" -var="image_identifier=$IMAGE" -var="alarm_email=$EMAIL" -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        working-directory: ./infra
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: ./infra
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -var="prefix=$PREFIX" -var="image_identifier=$IMAGE" -var="alarm_email=$EMAIL" -auto-approve